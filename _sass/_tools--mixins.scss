/**
 * Project Specific @mixin
 */

/**
 * Generic @mixin
 */

@mixin placeholder-styles {
  ::-webkit-input-placeholder {@content;}
  ::-moz-placeholder {@content;}
  :-moz-placeholder {@content;}
  :-ms-input-placeholder {@content;}
}

@mixin keyframe-animation($animation-name) {
  @-webkit-keyframes #{$animation-name} { @content; }
  @-moz-keyframes #{$animation-name} { @content; }
  @-o-keyframes #{$animation-name} { @content; }
  @keyframes #{$animation-name} { @content; }
}

@mixin dimension($dimension) {
  height: $dimension;
  width: $dimension;
}

@mixin fixed-line-based-height($font-size, $lines) {
  height: ($font-size*$line-height-base)*$lines;
}

@mixin truncate($width) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: $width;
}

/**
 * Use this mixin on the parent container that will have
 * the dynamic children to apply styles depending on the number
 * of children within it.
 */
@mixin children-based-layout($min: 1, $max: 5, $selector: 'div') {
  /*
    default width to be applied if children
    are more than $max variable
   */
  #{$selector} {
    width: 100%/$max;
  }

  @for $i from $min through $max {
    #{$selector}:first-child:nth-last-child(#{$i}),
    #{$selector}:first-child:nth-last-child(#{$i}) ~ #{$selector} {
      width: 100%/$i;
    }
  }
}

@mixin blur-effect($noise: 2px) {
  -webkit-filter: blur($noise);
  filter: blur($noise);
}

@mixin fade-out($speed: .216s, $transition-function: linear) {
  opacity: 0;
  transition: visibility 0s $speed, opacity $speed $transition-function;
  visibility: hidden;
}

@mixin fade-in($speed: .216s, $transition-function: linear) {
  opacity: 1;
  transition: opacity $speed $transition-function;
  visibility: visible;
}

@mixin comes-out($x: 0, $y: 0, $speed: .216s, $transition-function: ease) {
  transition: transform $speed $transition-function;
  transform: translate3d($x, $y, 0);
}

@mixin comes-in($x: 0, $y: 0, $speed: .216s, $transition-function: ease) {
  transition: transform $speed $transition-function;
  transform: translate3d($x, $y, 0);
}

@mixin overlay($background: $custom-black, $opacity: .75, $top: 0, $right: 0, $bottom: 0, $left: 0) {
  background-color: $background;
  bottom: $bottom;
  left: $left;
  position: absolute;
  right: $right;
  top: $top;
  opacity: $opacity;
}

@mixin triangle-up($color: $white, $side: 10px) {
  width: 0;
  height: 0;
  border-left: $side solid transparent;
  border-right: $side solid transparent;

  border-bottom: $side solid $color;
}

@mixin triangle-down($side: 10px, $color: $gray) {
  width: 0;
  height: 0;
  border-left: $side solid transparent;
  border-right: $side solid transparent;

  border-top: $side solid $color;
}

@mixin simple-transition($property: all, $speed: $default-speed-transition) {
  transition: $property ease-out $speed;
}

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

@mixin list-inline($gutter: $space*1.5) {
  > li {
    display: inline-block;

    & + li {
      margin-left: $gutter;
    }
  }
}

@mixin padding-y($padding) {
  padding-bottom: $padding;
  padding-top: $padding;
}

@mixin padding-x($padding) {
  padding-left: $padding;
  padding-right: $padding;
}

@mixin margin-y($margin) {
  margin-bottom: $margin;
  margin-top: $margin;
}

@mixin margin-x($margin) {
  margin-left: $margin;
  margin-right: $margin;
}
